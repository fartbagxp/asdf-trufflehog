#!/usr/bin/env bash

set -euo pipefail

download() {

  if command -v curl >/dev/null 2>&1; then
    echo "curl already installed"
  else
    echo "curl not installed! Please install curl before proceeding."
    exit 1
  fi

  local TRUFFLEHOG_VERSION="$1"
  local TRUFFLEHOG_DOWNLOAD_PATH="${2}"

  os=$(uname -s | tr '[:upper:]' '[:lower:]')
  machine=$(uname -m | tr '[:upper:]' '[:lower:]')

  os_version=""
  case "$os" in
    "linux")
      os_version="linux"
      ;;
    "darwin")
      os_version="darwin"
      ;;
    *)
      # try Windows; if it's not Linux and it's not MacOS, try Windows.
      os_version="windows"
      ;;
  esac

  machine_type=""
  case "$machine" in
    "x86_64")
      machine_type="amd64"
      ;;
    "aarch64")
      machine_type="arm64"
      ;;
    *)
      echo "Architecture not recognized or not supported."
      exit 1
      ;;
  esac

  echo "Determined operating system to be ${os_version}."
  echo "Determined machine type to be ${machine_type}."

  download_url="https://github.com/trufflesecurity/trufflehog/releases/download/v${TRUFFLEHOG_VERSION}/trufflehog_${TRUFFLEHOG_VERSION}_${os_version}_${machine_type}.tar.gz"

  echo "Downloading Trufflehog ${TRUFFLEHOG_VERSION} from $download_url"
  temp_file="$TRUFFLEHOG_DOWNLOAD_PATH/trufflehog.tar.gz"
  curl -fsSL -o "$temp_file" "$download_url"
  curl_exit_code=$?

  if [ "$curl_exit_code" -ne 0 ]; then
    echo "Failed to download Trufflehog."
    exit 1
  fi


  echo "Extracting Trufflehog ${TRUFFLEHOG_VERSION} into ${TRUFFLEHOG_DOWNLOAD_PATH}"
  tar -xzf "${temp_file}" -C "${TRUFFLEHOG_DOWNLOAD_PATH}"

  ## catch any accidential deletion if somebody set the wrong temp_dir
  if [ -d "$TRUFFLEHOG_DOWNLOAD_PATH" ]; then
    echo "Deleting temp file ${temp_file}."
    rm -rf "$temp_file"
  fi
}

## Useful for testing this script locally.
# download "3.63.1" "."
